{"version":3,"sources":["components/Container.js","components/Navbar.js","components/Table.js","components/TableItem.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["Container","children","className","Navbar","Table","props","scope","onClick","setSort","sort","height","width","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","TableItem","name","phone","email","src","picture","alt","API","fetchEmployees","axios","get","App","useState","results","setResults","search","setSearch","useEffect","then","res","data","catch","err","console","log","ascendingSort","descendingSort","prop","arr","a","b","type","value","onChange","event","target","length","map","result","i","number","first","last","medium","login","uuid","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84458032.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Container({children}) {\n    return (\n        <div className=\"container\">\n            {children}\n        </div>\n    )\n}\n\nexport default Container;","import React from \"react\";\n\nfunction Navbar() {\n  return (\n    <nav className=\"navbar\">\n      Employee Directory\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nfunction Table(props) {\n  return (\n    <table className=\"table table-hover\">\n      <thead>\n        <tr>\n          <th scope=\"col\">\n            <span>\n              Name\n              <svg\n                className=\"\"\n                onClick={() => {\n                  props.setSort(!props.sort);\n                }}\n                height=\"2rem\"\n                width=\"2rem\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M15 13l-3 3m0 0l-3-3m3 3V8m0 13a9 9 0 110-18 9 9 0 010 18z\"\n                />\n              </svg>\n            </span>\n          </th>\n          <th scope=\"col\">Phone</th>\n          <th scope=\"col\">Email</th>\n          <th scope=\"col\">Photo</th>\n        </tr>\n      </thead>\n      <tbody>{props.children}</tbody>\n    </table>\n  );\n}\n\nexport default Table;\n","import React from \"react\";\n\nfunction TableItem(props) {\n    return (\n        <tr className=\"table-dark\">\n          <th scope=\"row\">{props.name}</th>\n          <td>{props.phone}</td>\n          <td>{props.email}</td>\n          <td><img src={props.picture} alt={props.name}></img></td>\n        </tr>\n    )\n}\n\nexport default TableItem;","/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\n\nconst API_URL = \"https://randomuser.me/api/?results=30&nat=us\";\n\nconst API = {\n  fetchEmployees: () => axios.get(API_URL)\n};\n\nexport default API;","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Container from \"./components/Container\";\nimport Navbar from \"./components/Navbar\";\nimport Table from \"./components/Table\";\nimport TableItem from \"./components/TableItem\";\nimport API from \"./utils/API\";\n\nexport default function App() {\n  // set initial states to empty string/array (sub for componentOnMount)\n  const [results, setResults] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [sort, setSort] = useState(true);\n\n  // API hook sets results on mount\n  useEffect(() => {\n    API.fetchEmployees()\n      .then((res) => setResults(res.data.results))\n      .catch((err) => console.log(err));\n  }, []);\n\n  useEffect(() => {\n    if (sort) {\n      ascendingSort(\"first\", results);\n    } else {\n      descendingSort(\"first\", results);\n    }\n    console.log(sort);\n    // eslint-disable-next-line\n  }, [sort]);\n\n  const ascendingSort = (prop, arr) => {\n    arr.sort((a, b) => {\n      if (a.name[prop] < b.name[prop]) {\n        return -1;\n      } else if (a.name[prop] > b.name[prop]) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n  };\n\n  const descendingSort = (prop, arr) => {\n    arr.sort((a, b) => {\n      if (a.name[prop] < b.name[prop]) {\n        return 1;\n      } else if (a.name[prop] > b.name[prop]) {\n        return -1;\n      } else {\n        return 0;\n      }\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"row\">\n        <Navbar className=\"navbar\"></Navbar>\n      </div>\n      <Container className=\"container\">\n        <div className=\"row\">\n          <form>\n            <label>\n              Filter by Name:\n              <input\n                type=\"text\"\n                className=\"searchBar\"\n                value={search}\n                onChange={(event) => {\n                  // set search state to the value in the input field\n                  setSearch(event.target.value);\n                }}\n              />\n            </label>\n          </form>\n        </div>\n\n        <div className=\"row\">\n          <Table sort={sort} setSort={setSort}>\n            {/* if search length < 1, map through results and create table items for every result  */}\n            {search.length < 1\n              ? results.map((result, i) => (\n                  <TableItem\n                    number={i}\n                    key={result.login.uuid}\n                    name={result.name.first + \" \" + result.name.last}\n                    phone={result.phone}\n                    email={result.email}\n                    picture={result.picture.medium}\n                  ></TableItem>\n                ))\n              : // else map through results and return those results that match search\n                // eslint-disable-next-line\n                results.map((result, i) => {\n                  if (\n                    result.name.first\n                      .toLowerCase()\n                      .includes(search.toLowerCase())\n                  ) {\n                    return (\n                      <TableItem\n                        number={i}\n                        key={result.login.uuid}\n                        name={result.name.first + \" \" + result.name.last}\n                        phone={result.phone}\n                        email={result.email}\n                        picture={result.picture.medium}\n                      ></TableItem>\n                    );\n                  }\n                })}\n          </Table>\n        </div>\n      </Container>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}